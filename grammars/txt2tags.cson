# Tip: Follow good practices from:
# http://manual.macromates.com/en/language_grammars.html
# https://github.com/atom/language-gfm/blob/master/grammars/gfm.cson
# https://github.com/asciidoctor/atom-language-asciidoc/blob/master/grammars/asciidoc.cson

# I'm borrowing the scope from GFM because themes have their styles hardcoded to it :/
# https://github.com/atom/atom-dark-syntax/blob/master/index.less#L47
# https://github.com/atom/one-dark-syntax/blob/master/styles/language.less#L244
# https://github.com/atom/solarized-dark-syntax/blob/master/styles/markdown.less
# https://github.com/kevinsawicki/monokai/blob/master/index.less#L52
# https://github.com/danielgtaylor/atom-monokai-extended/blob/master/index.less#L181
scopeName: 'source.gfm.txt2tags'

name: 'Txt2tags'
fileTypes: [
  't2t'
]
patterns: [

  # Comment blocks
  {
    begin: '^%%%\\s*$'
    end: '^%%%\\s*$'
    name: 'comment.block.txt2tags'
  }

  # Horizontal line
  {
    match: '^\\s*[_=-]{20,}\\s*$'
    name: 'comment.hr.txt2tags'
  }

  # Inline: __underline__, **bold**
  {
    match: '__([^\\s](|.*?[^\\s])_*)__'
    name: 'markup.underline.txt2tags'
  }
  {
    match: '\\*\\*([^\\s](|.*?[^\\s])\\**)\\*\\*'
    name: 'markup.bold.txt2tags'
  }

  # Headings:
  #   == foo ==
  #   == foo ==[anchor]
  {
    match: '^\\s*={1}[^=](|.*[^=])={1}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-1.txt2tags'
  }
  {
    match: '^\\s*={2}[^=](|.*[^=])={2}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-2.txt2tags'
  }
  {
    match: '^\\s*={3}[^=](|.*[^=])={3}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-3.txt2tags'
  }
  {
    match: '^\\s*={4}[^=](|.*[^=])={4}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-4.txt2tags'
  }
  {
    match: '^\\s*={5}[^=](|.*[^=])={5}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-5.txt2tags'
  }

  # Numbered headings:
  #   ++ foo ++
  #   ++ foo ++[anchor]
  {
    match: '^\\s*\\+{1}[^+](|.*[^+])\\+{1}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-1.txt2tags'
  }
  {
    match: '^\\s*\\+{2}[^+](|.*[^+])\\+{2}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-2.txt2tags'
  }
  {
    match: '^\\s*\\+{3}[^+](|.*[^+])\\+{3}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-3.txt2tags'
  }
  {
    match: '^\\s*\\+{4}[^+](|.*[^+])\\+{4}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-4.txt2tags'
  }
  {
    match: '^\\s*\\+{5}[^+](|.*[^+])\\+{5}(\\[[\\w-]*\\])?\\s*$'
    name: 'markup.heading.heading-5.txt2tags'
  }

  # Inline: //italic//, --strike--
  {
    match: '//([^\\s](|.*?[^\\s])/*)//'
    name: 'markup.italic.txt2tags'
  }
  {
    match: '--([^\\s](|.*?[^\\s])-*)--'
    name: 'markup.strike.invalid.deprecated.txt2tags'
  }

  # Raw (inline and block)
  {
    match: '""([^\\s](|.*?[^\\s])"*)""'
    name: 'string.quoted.raw.inline.txt2tags'
  }
  {
    match: '^""" (?=.).*$'
    name: 'string.quoted.raw.block.txt2tags'
  }
  {
    begin: '^"""\\s*$'
    end: '^"""\\s*$'
    name: 'string.quoted.raw.block.txt2tags'
  }

  # Tagged (inline and block)
  {
    match: "''([^\\s](|.*?[^\\s])'*)''"
    name: 'string.quoted.tagged.inline.txt2tags'
  }
  {
    match: "^''' (?=.).*$"
    name: 'string.quoted.tagged.block.txt2tags'
  }
  {
    begin: "^'''\\s*$"
    end: "^'''\\s*$"
    name: 'string.quoted.tagged.block.txt2tags'
  }

  # Lists
  {
    match: '^ *(\\+) (?=[^ ])'
    captures:
      '1':
        name: 'variable.ordered.list.txt2tags'
  }
  {
    match: '^ *(\\+)\\s*$'
    captures:
      '1':
        name: 'variable.ordered.list.txt2tags'
  }
  {
    match: '^ *(-) (?=[^ ])'
    captures:
      '1':
        name: 'variable.unordered.list.txt2tags'
  }
  {
    match: '^ *(:) (?=.)'
    captures:
      '1':
        name: 'variable.unordered.list.txt2tags'
  }
  {
    match: '^ *([:-])\\s*$'
    captures:
      '1':
        name: 'variable.unordered.list.txt2tags'
  }

  # Code (block and inline)
  {
    begin: '^```\\s*$'
    end: '^```\\s*$'
    name: 'markup.raw.code.block.txt2tags'
  }
  {
    match: '^``` (?=.).*$'
    name: 'markup.raw.code.block.txt2tags'
  }
  {
    match: '``([^\\s](|.*?[^\\s])`*)``'
    name: 'markup.raw.code.inline.txt2tags'
  }

  # Misc
  {
    match: '[\\t ]+$'
    name: 'invalid.deprecated.trailing-whitespace.txt2tags'
  }

  # Macros: %%date, %%mtime, ...
  {
    match: '(?i)%%(date|mtime|infile|outfile)(\\(.*?\\))?|%%toc'
    name: 'string.interpolated.txt2tags'
  }

  # Settings: %!target, %!options, ...
  {
    match: '(?i)^%!\\s*(target|encoding|style|options|include|includeconf|preproc|postproc|guicolors)\\s*(\\(\\w*\\))?\\s*:.*'
    name: 'constant.character.txt2tags'
  }

  # Image: [file.png]
  {
    match: '(\\[)([\\w_,.+%$#@!?+~/-]+\\.(png|jpe?g|gif|eps|bmp))(\\])'
    captures:
      '1':
        name: 'punctuation.definition.begin.txt2tags'
      '2':
        name: 'markup.underline.link.txt2tags'
      '4':
        name: 'punctuation.definition.end.txt2tags'
  }

  # Email:
  #   foo@example.com
  #   foo@example.com?subject=Hello
  {
    match: '(?i)\\b[A-Za-z0-9_.-]+@([A-Za-z0-9_-]+\\.)+[A-Za-z]{2,4}\\b(\\?[A-Za-z0-9/%&=+;.,$@*_-]+)?'
    name: 'markup.underline.link.email.txt2tags'
  }

  # URL (protocol?, www?, domain, params?, anchor?)
  {
    match: '(?i)\\b((https?|ftp|news|telnet|gopher|wais)://([A-Za-z0-9_.-]+(:[^ @]*)?@)?|(www[23]?|ftp)\\.)[A-Za-z0-9%._/~:,=$@&+-]+\\b/*(\\?[A-Za-z0-9/%&=+;.,$@*_-]+)?(#[A-Za-z0-9%._-]*)?'
    name: 'markup.underline.link.http.hyperlink'
  }

  # Link:
  #   [label url]
  #   [[image.png] url]
  {
    match: '(?i)(\\[)(\\[[\\w_,.+%$#@!?+~/-]+\\.(png|jpe?g|gif|eps|bmp)\\]|[^]]+) (((https?|ftp|news|telnet|gopher|wais)://([A-Za-z0-9_.-]+(:[^ @]*)?@)?|(www[23]?|ftp)\\.)[A-Za-z0-9%._/~:,=$@&+-]+\\b/*(\\?[A-Za-z0-9/%&=+;.,$@*_-]+)?(#[A-Za-z0-9%._-]*)?|[A-Za-z0-9_.-]+@([A-Za-z0-9_-]+\\.)+[A-Za-z]{2,4}\\b(\\?[A-Za-z0-9/%&=+;.,$@*_-]+)?|[A-Za-z0-9%._/~:,=$@&+-]+|[A-Za-z0-9%._/~:,=$@&+-]*(#[A-Za-z0-9%._-]*))(\\])'
    name: 'link'
    captures:
      '1':
        name: 'punctuation.definition.begin.txt2tags'
      '2':
        name: 'entity.txt2tags'
      '4':
        name: 'markup.underline.link.txt2tags'
      '15':
        name: 'punctuation.definition.end.txt2tags'
  }

  # Blockquote
  {
    match: '^\\t.*$'
    name: 'markup.quote.txt2tags'
  }

  # Comment line (must be the last rule)
  {
    match: '^%.*$'
    name: 'comment.txt2tags'
  }
]
